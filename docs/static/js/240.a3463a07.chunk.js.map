{"version":3,"file":"static/js/240.a3463a07.chunk.js","mappings":"8OACA,EAAwB,yBAAxB,EAA4D,4BAA5D,EAA0G,mCAA1G,EAAiK,qC,UCE1J,MAAMA,EAAY,IAA0E,IAAzE,WAAEC,EAAF,SAAcC,EAAd,cAAwBC,EAAxB,YAAuCC,GAAiC,EAC7FC,EAAaC,KAAKC,KAAKN,EAAaC,GACpCM,EAAQC,MAAMJ,GAChBK,KAAK,GACLC,KAAI,CAACC,EAAGC,IAAMA,EAAI,IAClBC,MACAR,KAAKS,MAAMX,EAAcF,IAAa,EAAI,EAAIE,EAAc,EAC5DA,EAAcH,EAAa,EAAIA,EAAa,EAAIG,EAAc,GAGhE,OACC,iBAAKY,UAAWC,EAAhB,WACC,iBAAMC,MAAO,CAAEC,MAAO,UAAWC,WAAY,SAAUC,SAAU,OAAQC,YAAa,QAAtF,qBACA,iBACCN,UAAWC,EACXM,QAAS,IAAMpB,EAAcC,EAAc,KAAQ,EAAI,EAAIA,EAAc,KAF1E,SAGE,YAEF,iBACCY,UAAWC,EACXM,QAAS,IAAMpB,EAAcC,EAAc,KAAO,EAAI,EAAIA,EAAc,KAFzE,SAGE,WAEF,iBAAMY,UAAWC,EAAqBM,QAAS,IAAMpB,EAAcC,EAAc,IAAM,EAAI,EAAIA,EAAc,IAA7G,SACE,UAEF,iBAAMc,MAAO,CAAEC,MAAO,UAAWC,WAAY,UAA7C,SAA0D,MACzDZ,EAAMG,KAAKE,IACX,iBAECG,UAAWH,IAAMT,EAAe,GAAEa,KAAcA,IAAYA,EAC5DM,QAAS,IAAMpB,EAAcU,GAH9B,SAIEA,GAHIA,MAMP,iBAAMK,MAAO,CAAEC,MAAO,UAAWC,WAAY,UAA7C,SAA0D,OAC1D,iBACCJ,UAAWC,EACXM,QAAS,IACRpB,EAAcC,EAAc,IAAME,KAAKC,KAAKN,EAAaC,GAAYG,EAAaD,EAAc,IAHlG,SAKE,WAEF,iBACCY,UAAWC,EACXM,QAAS,IACRpB,EAAcC,EAAc,KAAOE,KAAKC,KAAKN,EAAaC,GAAYG,EAAaD,EAAc,KAHnG,SAKE,WAEF,iBACCY,UAAWC,EACXM,QAAS,IACRpB,EAAcC,EAAc,KAAQE,KAAKC,KAAKN,EAAaC,GAAYG,EAAaD,EAAc,KAHpG,SAKE,c,wBCzDL,EAAwB,qBAAxB,EAAqD,qBAArD,EAAqF,wBAArF,EAAyH,yBAAzH,EAA2J,sBCKpJ,MAAMoB,EAA0B,IAAiD,IAAhD,KAAEC,EAAF,iBAAQC,EAAR,eAA0BC,GAAqB,EACtF,OACC,iBAAKX,UAAWC,EAAhB,WACC,iBAAKD,UAAWC,EAAhB,WACC,SAAC,KAAD,CAASW,GAAK,YAAWH,EAAKI,KAA9B,UACC,gBAAKC,IAAKL,EAAKM,OAAOC,MAAQP,EAAKM,OAAOC,MAAQC,EAAKC,MAAM,OAAOC,OAAO,OAAOC,IAAI,aAEtFX,EAAKY,UACL,mBACCC,SAAUX,EAAeY,MAAMV,GAAOA,IAAOJ,EAAKI,KAClDX,MAAO,CAAEsB,QAASb,EAAeY,MAAMV,GAAOA,IAAOJ,EAAKI,KAAM,MAAQ,KACxEN,QAAS,IAAMG,EAAiBD,EAAKI,IAAI,GAH1C,qBAOA,mBACCS,SAAUX,EAAeY,MAAMV,GAAOA,IAAOJ,EAAKI,KAClDX,MAAO,CAAEsB,QAASb,EAAeY,MAAMV,GAAOA,IAAOJ,EAAKI,KAAM,MAAQ,KACxEN,QAAS,IAAMG,EAAiBD,EAAKI,IAAI,GAH1C,0BAQF,iBAAKb,UAAWC,EAAhB,WACC,SAAC,KAAD,CAASW,GAAK,YAAWH,EAAKI,KAA9B,UACC,0BAAOJ,EAAKgB,UAEb,iBAAMzB,UAAWC,EAAjB,SAA4BQ,EAAKiB,cAzBLjB,EAAKI,KCHxBc,EAA6BC,IACzC,IAAI,MAAEC,EAAF,SAAS3C,EAAT,YAAmBE,EAAnB,WAAgCH,EAAhC,eAA4C0B,EAA5C,cAA4DxB,EAA5D,iBAA2EuB,GAAqBkB,EAEpG,OADAE,SAASC,MAAQ,yBAEhB,iCACC,SAAC/C,EAAD,CAAWC,WAAYA,EAAYC,SAAUA,EAAUE,YAAaA,EAAaD,cAAeA,IAC/F0C,EAAMlC,KAAKqC,IACX,SAACxB,EAAD,CAAiBC,KAAMuB,EAAGtB,iBAAkBA,EAAkBC,eAAgBA,GAAnEqB,EAAEnB,UCSjB,MAAMoB,UAA0BC,EAAAA,UAC/BC,oBACCC,KAAKR,MAAMS,SAASD,KAAKR,MAAM1C,SAAUkD,KAAKR,MAAMxC,aAGrDD,cAAcmD,GACbF,KAAKR,MAAMW,eAAeD,GAC1BF,KAAKR,MAAMS,SAASD,KAAKR,MAAM1C,SAAUoD,GAG1CE,SACC,OAAKJ,KAAKR,MAAMa,YAEf,gBAAKzC,UAAWC,EAAhB,SACEmC,KAAKR,MAAMc,cACX,SAACC,EAAA,EAAD,CAAWzC,MAAO,CAAEgB,MAAO,MAAOC,OAAQ,WAE1C,SAACQ,EAAD,CACCE,MAAOO,KAAKR,MAAMC,MAClBnB,iBAAkB0B,KAAKR,MAAMlB,iBAC7BzB,WAAYmD,KAAKR,MAAM3C,WACvBG,YAAagD,KAAKR,MAAMxC,YACxBF,SAAUkD,KAAKR,MAAM1C,SACrBC,cAAeiD,KAAKjD,cAAcyD,KAAKR,MACvCzB,eAAgByB,KAAKR,MAAMjB,oBAbI,SAAC,KAAD,CAAUC,GAAI,YAkDnD,OArBuBiC,EAAAA,EAAAA,IACtBC,EAAAA,GACAC,EAAAA,EAAAA,KAXwBC,IAAD,CACvBnB,OAAOoB,EAAAA,EAAAA,IAAcD,GACrB9D,UAAUgE,EAAAA,EAAAA,GAAiBF,GAC3B5D,aAAa+D,EAAAA,EAAAA,IAAoBH,GACjC/D,YAAYmE,EAAAA,EAAAA,IAAmBJ,GAC/BN,cAAcW,EAAAA,EAAAA,IAAqBL,GACnCrC,gBAAgB2C,EAAAA,EAAAA,GAAuBN,GACvCP,YAAYc,EAAAA,EAAAA,IAAmBP,MAIN,CAAET,eAAF,KAAkB7B,iBAAlB,KAAoC2B,SAApC,OAFHQ,CAGrBZ","sources":["webpack://samurai-way/./src/components/common/paginator/Paginator.module.css?ad53","components/common/paginator/Paginator.tsx","webpack://samurai-way/./src/components/users/Users.module.css?4bb1","components/users/user/User.tsx","components/users/Users.tsx","components/users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"pages\":\"Paginator_pages__fSLJy\",\"selected\":\"Paginator_selected__WSXNc\",\"paginationBlock\":\"Paginator_paginationBlock__AJCvt\",\"paginationSetting\":\"Paginator_paginationSetting__JrG99\"};","import s from 'components/common/paginator/Paginator.module.css'\nimport React from 'react'\n\nexport const Paginator = ({ totalCount, pageSize, onPageChanged, currentPage }:PaginatorProps) => {\n\tlet pagesCount = Math.ceil(totalCount / pageSize)\n\tlet pages = Array(pagesCount)\n\t\t.fill(0)\n\t\t.map((_, i) => i + 1)\n\t\t.slice(\n\t\t\tMath.floor(currentPage / pageSize) <= 5 ? 0 : currentPage - 5,\n\t\t\tcurrentPage > totalCount - 4 ? totalCount + 1 : currentPage + 4,\n\t\t)\n\n\treturn (\n\t\t<div className={s.paginationBlock}>\n\t\t\t<span style={{ color: \"#b1e5e7\", fontWeight: \"bolder\", fontSize: \"18px\", marginRight: \"10px\" }}>Page: </span>\n\t\t\t<span\n\t\t\t\tclassName={s.paginationSetting}\n\t\t\t\tonClick={() => onPageChanged(currentPage - 1000 <= 0 ? 1 : currentPage - 1000)}>\n\t\t\t\t{\"-1000 \"}\n\t\t\t</span>\n\t\t\t<span\n\t\t\t\tclassName={s.paginationSetting}\n\t\t\t\tonClick={() => onPageChanged(currentPage - 100 <= 0 ? 1 : currentPage - 100)}>\n\t\t\t\t{\"-100 \"}\n\t\t\t</span>\n\t\t\t<span className={s.paginationSetting} onClick={() => onPageChanged(currentPage - 10 <= 0 ? 1 : currentPage - 10)}>\n\t\t\t\t{\"-10 \"}\n\t\t\t</span>\n\t\t\t<span style={{ color: \"#b1e5e7\", fontWeight: \"bolder\" }}>{\"<\"}</span>\n\t\t\t{pages.map((i) => (\n\t\t\t\t<span\n\t\t\t\t\tkey={i}\n\t\t\t\t\tclassName={i === currentPage ? `${s.selected} ${s.pages}` : s.pages}\n\t\t\t\t\tonClick={() => onPageChanged(i)}>\n\t\t\t\t\t{i}\n\t\t\t\t</span>\n\t\t\t))}\n\t\t\t<span style={{ color: \"#b1e5e7\", fontWeight: \"bolder\" }}>{\">\"}</span>\n\t\t\t<span\n\t\t\t\tclassName={s.paginationSetting}\n\t\t\t\tonClick={() =>\n\t\t\t\t\tonPageChanged(currentPage + 10 >= Math.ceil(totalCount / pageSize) ? pagesCount : currentPage + 10)\n\t\t\t\t}>\n\t\t\t\t{\" +10 \"}\n\t\t\t</span>\n\t\t\t<span\n\t\t\t\tclassName={s.paginationSetting}\n\t\t\t\tonClick={() =>\n\t\t\t\t\tonPageChanged(currentPage + 100 >= Math.ceil(totalCount / pageSize) ? pagesCount : currentPage + 100)\n\t\t\t\t}>\n\t\t\t\t{\"+100 \"}\n\t\t\t</span>\n\t\t\t<span\n\t\t\t\tclassName={s.paginationSetting}\n\t\t\t\tonClick={() =>\n\t\t\t\t\tonPageChanged(currentPage + 1000 >= Math.ceil(totalCount / pageSize) ? pagesCount : currentPage + 1000)\n\t\t\t\t}>\n\t\t\t\t{\"+1000\"}\n\t\t\t</span>\n\t\t</div>\n\t)\n}\n//types\ntype PaginatorProps = {\n\ttotalCount: number\n\tpageSize: number\n\tcurrentPage: number\n\tonPageChanged: (pageNumber: number) => void\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"users\":\"Users_users__9lzLG\",\"block\":\"Users_block__buHg9\",\"blockImg\":\"Users_blockImg__WwF37\",\"blockMain\":\"Users_blockMain__Rl6zc\",\"status\":\"Users_status__MYids\",\"blockLocation\":\"Users_blockLocation__kGBj+\"};","import { UserType } from \"api/API\"\nimport React, { FC } from \"react\"\nimport { NavLink } from \"react-router-dom\"\nimport ava from \"../../../assets/avatar.webp\"\nimport s from \"../Users.module.css\"\n\nexport const User: FC<UserPropsType> = ({ user, toggleFollowUser, buttonDisabled }) => {\n\treturn (\n\t\t<div className={s.block} key={user.id}>\n\t\t\t<div className={s.blockImg}>\n\t\t\t\t<NavLink to={`/profile/${user.id}`}>\n\t\t\t\t\t<img src={user.photos.small ? user.photos.small : ava} width=\"50px\" height=\"50px\" alt=\"avatar\" />\n\t\t\t\t</NavLink>\n\t\t\t\t{user.followed ? (\n\t\t\t\t\t<button\n\t\t\t\t\t\tdisabled={buttonDisabled.some((id) => id === user.id)}\n\t\t\t\t\t\tstyle={{ opacity: buttonDisabled.some((id) => id === user.id) ? \"0.3\" : \"1\" }}\n\t\t\t\t\t\tonClick={() => toggleFollowUser(user.id, false)}>\n\t\t\t\t\t\tFOLLOW\n\t\t\t\t\t</button>\n\t\t\t\t) : (\n\t\t\t\t\t<button\n\t\t\t\t\t\tdisabled={buttonDisabled.some((id) => id === user.id)}\n\t\t\t\t\t\tstyle={{ opacity: buttonDisabled.some((id) => id === user.id) ? \"0.3\" : \"1\" }}\n\t\t\t\t\t\tonClick={() => toggleFollowUser(user.id, true)}>\n\t\t\t\t\t\tUNFOLLOW\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className={s.blockMain}>\n\t\t\t\t<NavLink to={`/profile/${user.id}`}>\n\t\t\t\t\t<span>{user.name}</span>\n\t\t\t\t</NavLink>\n\t\t\t\t<span className={s.status}>{user.status}</span>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n//types\ntype UserPropsType = {\n\tuser: UserType\n\tbuttonDisabled: number[]\n\ttoggleFollowUser: (userId: number, followed: boolean) => void\n}\n","import { UserType } from \"api/API\"\nimport React, { FC } from \"react\"\nimport { Paginator } from \"../common/paginator/Paginator\"\nimport { User } from \"./user/User\"\n\nexport const Users: FC<UsersPropsType> = (props) => {\n\tlet { users, pageSize, currentPage, totalCount, buttonDisabled, onPageChanged, toggleFollowUser } = props\n\tdocument.title = \"SocialNetwork - users\"\n\treturn (\n\t\t<>\n\t\t\t<Paginator totalCount={totalCount} pageSize={pageSize} currentPage={currentPage} onPageChanged={onPageChanged} />\n\t\t\t{users.map((u) => (\n\t\t\t\t<User key={u.id} user={u} toggleFollowUser={toggleFollowUser} buttonDisabled={buttonDisabled} />\n\t\t\t))}\n\t\t</>\n\t)\n}\n//types\ntype UsersPropsType = {\n\tusers: UserType[]\n\tpageSize: number\n\tcurrentPage: number\n\ttotalCount: number\n\tbuttonDisabled: number[]\n\tonPageChanged: (pageNumber: number) => void\n\ttoggleFollowUser: (userId: number, followed: boolean) => void\n}\n","import { UserType } from \"api/API\"\nimport { withAuthRedirect } from \"utils/hoc/withAuthRedirect\"\nimport React, { Component, ComponentType } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Redirect } from \"react-router-dom\"\nimport { compose } from \"redux\"\nimport { StateRedux } from \"redux/_Store-Redux\"\nimport { toggleFollowUser, getUsers, setCurrentPage } from \"redux/UsersReducer\"\nimport {\n\tbuttonDisabledSelector,\n\tcurrentPageSelector,\n\tisLoggedInSelector,\n\tisPreloadingSelector,\n\tpageSizeSelector,\n\ttotalCountSelector,\n\tusersSelector,\n} from \"utils/selectors/selectors\"\nimport { Preloader } from \"../common/preloader/Preloader\"\nimport { Users } from \"./Users\"\nimport s from \"./Users.module.css\"\n\nclass UsersAPIComponent extends Component<UsersAPIComponentPropsType> {\n\tcomponentDidMount() {\n\t\tthis.props.getUsers(this.props.pageSize, this.props.currentPage)\n\t}\n\n\tonPageChanged(pageNumber: number) {\n\t\tthis.props.setCurrentPage(pageNumber)\n\t\tthis.props.getUsers(this.props.pageSize, pageNumber)\n\t}\n\n\trender() {\n\t\tif (!this.props.isLoggedIn) return <Redirect to={\"/login\"} />\n\t\treturn (\n\t\t\t<div className={s.users}>\n\t\t\t\t{this.props.isPreloading ? (\n\t\t\t\t\t<Preloader style={{ width: \"53%\", height: \"100%\" }} />\n\t\t\t\t) : (\n\t\t\t\t\t<Users\n\t\t\t\t\t\tusers={this.props.users}\n\t\t\t\t\t\ttoggleFollowUser={this.props.toggleFollowUser}\n\t\t\t\t\t\ttotalCount={this.props.totalCount}\n\t\t\t\t\t\tcurrentPage={this.props.currentPage}\n\t\t\t\t\t\tpageSize={this.props.pageSize}\n\t\t\t\t\t\tonPageChanged={this.onPageChanged.bind(this)}\n\t\t\t\t\t\tbuttonDisabled={this.props.buttonDisabled}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t)\n\t}\n}\nconst mapStateToProps = (state: StateRedux): mStPType => ({\n\tusers: usersSelector(state),\n\tpageSize: pageSizeSelector(state),\n\tcurrentPage: currentPageSelector(state),\n\ttotalCount: totalCountSelector(state),\n\tisPreloading: isPreloadingSelector(state),\n\tbuttonDisabled: buttonDisabledSelector(state),\n\tisLoggedIn: isLoggedInSelector(state),\n})\nconst UsersContainer = compose<ComponentType>(\n\twithAuthRedirect,\n\tconnect(mapStateToProps, { setCurrentPage, toggleFollowUser, getUsers }),\n)(UsersAPIComponent)\n//types\ntype mStPType = {\n\tusers: UserType[]\n\tpageSize: number\n\tcurrentPage: number\n\ttotalCount: number\n\tisPreloading: boolean\n\tbuttonDisabled: number[]\n\tisLoggedIn: boolean\n}\ntype mDtPType = {\n\tsetCurrentPage: (currentPage: number) => void\n\ttoggleFollowUser: (userId: number, followed: boolean) => void\n\tgetUsers: (pageSize: number, currentPage: number) => void\n}\ntype UsersAPIComponentPropsType = mStPType & mDtPType\n\nexport default UsersContainer\n"],"names":["Paginator","totalCount","pageSize","onPageChanged","currentPage","pagesCount","Math","ceil","pages","Array","fill","map","_","i","slice","floor","className","s","style","color","fontWeight","fontSize","marginRight","onClick","User","user","toggleFollowUser","buttonDisabled","to","id","src","photos","small","ava","width","height","alt","followed","disabled","some","opacity","name","status","Users","props","users","document","title","u","UsersAPIComponent","Component","componentDidMount","this","getUsers","pageNumber","setCurrentPage","render","isLoggedIn","isPreloading","Preloader","bind","compose","withAuthRedirect","connect","state","usersSelector","pageSizeSelector","currentPageSelector","totalCountSelector","isPreloadingSelector","buttonDisabledSelector","isLoggedInSelector"],"sourceRoot":""}