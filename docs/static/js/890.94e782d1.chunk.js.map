{"version":3,"file":"static/js/890.94e782d1.chunk.js","mappings":"oMACA,QAA0B,yBAA1B,EAA8D,0BAA9D,EAAsG,6BAAtG,EAA4I,wBAA5I,EAA6K,wBAA7K,EAA+M,yB,wBCQxM,MAAMA,EAAaC,IAAoC,IAAnC,GAAEC,EAAE,KAAEC,GAAuBF,EACvD,OACCG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAASC,UACxBH,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACC,GAAI,YAAcP,EAAIQ,gBAAiBJ,EAASC,SACvDJ,KAEG,ECPKQ,EAAUV,IAAmC,IAAlC,GAAEC,EAAE,QAAEU,GAAsBX,EACnD,OACCG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAUC,SACxBK,GAD8BV,EAE1B,E,cCHR,MAkBA,GAXyBW,E,QAAAA,IAAuBC,EAAAA,GAAkBC,EAAAA,EAAAA,KAPzCC,IAAiB,CACzCC,QAAQC,EAAAA,EAAAA,IAAeF,GACvBG,YAAYC,EAAAA,EAAAA,IAAmBJ,OAGJK,IAAkB,CAAcA,eAEnCR,ECPFZ,IAA4D,IAA3D,OAAEgB,EAAM,SAAEI,EAAQ,WAAEF,GAAiClB,EAC5EqB,SAASC,MAAQ,0BAIjB,OAAKJ,GAEJK,EAAAA,EAAAA,MAAA,OAAKnB,UAAWC,EAAUC,SAAA,EACzBiB,EAAAA,EAAAA,MAAA,OAAKnB,UAAWC,EAAcC,SAAA,EAC7BH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,YACLU,EAAOQ,QAAQC,KAAKC,IACpBvB,EAAAA,EAAAA,KAACJ,EAAU,CAAYE,GAAIyB,EAAEzB,GAAIC,KAAMwB,EAAExB,MAAxBwB,EAAEzB,OAEpBE,EAAAA,EAAAA,KAACwB,EAAAA,EAAkB,CAACC,WAAW,aAAaC,SAX5BC,GAAuBV,GAASW,EAAAA,EAAAA,IAAYD,EAASE,YAWJC,YAAY,YAAY/B,KAAK,kBAE/FqB,EAAAA,EAAAA,MAAA,OAAKnB,UAAWC,EAAWC,SAAA,EAC1BH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,aACLU,EAAOkB,SAAST,KAAKU,IACrBhC,EAAAA,EAAAA,KAACO,EAAO,CAAYT,GAAIkC,EAAElC,GAAIU,QAASwB,EAAExB,SAA3BwB,EAAElC,OAEjBE,EAAAA,EAAAA,KAACwB,EAAAA,EAAkB,CAACC,WAAW,cAAcC,SAjB5BC,GAAuBV,GAASgB,EAAAA,EAAAA,IAAaN,EAASO,aAiBJJ,YAAY,aAAa/B,KAAK,sBAf5EC,EAAAA,EAAAA,KAACmC,EAAAA,GAAQ,CAAC9B,GAAI,UAiB/B,G","sources":["webpack://samurai-way/./src/components/dialogs/Dialogs.module.css?195b","components/dialogs/dialogItem/DialogItem.tsx","components/dialogs/message/Message.tsx","components/dialogs/DialogsContainer.ts","components/dialogs/Dialogs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__K9Ijy\",\"messages\":\"Dialogs_messages__m+vwq\",\"dialogsItem\":\"Dialogs_dialogsItem__gddYM\",\"dialog\":\"Dialogs_dialog__TRKPy\",\"active\":\"Dialogs_active__5jfyL\",\"message\":\"Dialogs_message__WIydB\"};","import React from \"react\"\nimport s from \"../Dialogs.module.css\"\nimport { NavLink } from \"react-router-dom\"\n\nexport type DialogItemProps = {\n\tid: number\n\tname: string\n}\n\nexport const DialogItem = ({ id, name }: DialogItemProps) => {\n\treturn (\n\t\t<div className={s.dialog}>\n\t\t\t<NavLink to={\"/dialogs/\" + id} activeClassName={s.active}>\n\t\t\t\t{name}\n\t\t\t</NavLink>\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport s from '../Dialogs.module.css'\n\nexport type MessageType = {\n\tid: number\n\tmessage: string\n}\n\nexport const Message = ({ id, message }: MessageType) => {\n\treturn (\n\t\t<div className={s.message} key={id}>\n\t\t\t{message}\n\t\t</div>\n\t)\n}\n","import { withAuthRedirect } from \"utils/hoc/withAuthRedirect\"\nimport { ComponentType } from \"react\"\nimport { dialogSelector, isLoggedInSelector } from \"utils/selectors/selectors\"\nimport { Dialogs } from \"./Dialogs\"\nimport { connect } from \"react-redux\"\nimport { StateRedux, StoreAction } from \"redux/_Store-Redux\"\nimport { DialogPage } from \"redux/DialogReducer\"\nimport { compose, Dispatch } from \"redux\"\n\nconst mapStateToProps = (state: StateRedux): MStP => ({\n\tdialog: dialogSelector(state),\n\tisLoggedIn: isLoggedInSelector(state),\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch): MDtP => ({ dispatch })\n\nconst DialogsContainer = compose<ComponentType>(withAuthRedirect, connect(mapStateToProps, mapDispatchToProps))(Dialogs)\n//types\ntype MStP = {\n\tdialog: DialogPage\n\tisLoggedIn: boolean\n}\ntype MDtP = {\n\tdispatch: (AC: StoreAction) => void\n}\nexport type DialogsContainerType = MStP & MDtP\n\nexport default DialogsContainer\n","import React from \"react\"\nimport { Redirect } from \"react-router-dom\"\nimport { addDialogAC, addMessageAC } from \"../../redux/DialogReducer\"\nimport { TextareaWithButton, TextForm } from \"../common/textareaWithButton/TextareaWithButton\"\nimport { DialogItem } from \"./dialogItem/DialogItem\"\nimport s from \"./Dialogs.module.css\"\nimport { DialogsContainerType } from \"./DialogsContainer\"\nimport { Message } from \"./message/Message\"\n\nexport const Dialogs = ({ dialog, dispatch, isLoggedIn }:DialogsContainerType) => {\n\tdocument.title = \"SocialNetwork - dialogs\"\n\tconst addDialog = (formData: TextForm) => dispatch(addDialogAC(formData.addDialog))\n\tconst addMessage = (formData: TextForm) => dispatch(addMessageAC(formData.addMessage))\n\n\tif (!isLoggedIn) return <Redirect to={\"/login\"} />\n\treturn (\n\t\t<div className={s.dialogs}>\n\t\t\t<div className={s.dialogsItem}>\n\t\t\t\t<span>Dialogs</span>\n\t\t\t\t{dialog.dialogs.map((d) => (\n\t\t\t\t\t<DialogItem key={d.id} id={d.id} name={d.name} />\n\t\t\t\t))}\n\t\t\t\t<TextareaWithButton buttonName=\"ADD DIALOG\" onSubmit={addDialog} placeholder=\"addDialog\" name=\"addDialog\" />\n\t\t\t</div>\n\t\t\t<div className={s.messages}>\n\t\t\t\t<span>Messages</span>\n\t\t\t\t{dialog.messages.map((m) => (\n\t\t\t\t\t<Message key={m.id} id={m.id} message={m.message}/>\n\t\t\t\t))}\n\t\t\t\t<TextareaWithButton buttonName=\"ADD MESSAGE\" onSubmit={addMessage} placeholder=\"addMessage\" name=\"addMessage\"/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n"],"names":["DialogItem","_ref","id","name","_jsx","className","s","children","NavLink","to","activeClassName","Message","message","compose","withAuthRedirect","connect","state","dialog","dialogSelector","isLoggedIn","isLoggedInSelector","dispatch","document","title","_jsxs","dialogs","map","d","TextareaWithButton","buttonName","onSubmit","formData","addDialogAC","addDialog","placeholder","messages","m","addMessageAC","addMessage","Redirect"],"sourceRoot":""}